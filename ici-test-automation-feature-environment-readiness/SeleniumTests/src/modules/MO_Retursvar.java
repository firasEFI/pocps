package modules;

import java.io.File;
import java.io.IOException;

import icisel.testng.TestContext;
import utils.batchJob.BatchJobRunner;
import utils.retursvar.Retursvar;
import utils.retursvar.RetursvarType;
import utils.retursvar.RetursvarsManager;

public class MO_Retursvar {

    /**
     * Funktion opretter et retursvar, som siden sendes afsted og køres gennem
     * systemet via diverse batchjobs.
     * 
     * Entry: Foregår på en ny side, så den kan startes fra alle steder i
     * løsningen Exit: Der skal logges ind i PSRM forfra
     * 
     * @param retursvarType
     *            The Type of the retursvar that needs to be generated
     * @param beloebDkk
     *            The amount of the payment
     * @param customerID
     *            represents either a CPR (10 digits) or CVR (8 digits)
     * @param justeringsID
     *            The Adjustment ID is generated by PSRM for a specific payout -
     *            The id is generated after approving the payout in PSRM. It can
     *            be found in Justeringer/Adjustments in the context menu in
     *            PSRm.
     * @param messageID
     *            The message ID is generated by PSRM for all payouts (since
     *            last payout) when the batchjob DKDBOVP (for CPR) /DKCLOVP (for
     *            CVR) has been initiated.
     */
    public static void opretRetursvar(RetursvarType retursvarType, double beloebDkk, String customerID,
            String justeringsID,
            String messageID, TestContext testContext)
            throws IOException {

        Retursvar retursvar = new Retursvar(retursvarType, beloebDkk, customerID, justeringsID, messageID);

        standardOpretProcedure(retursvarType, retursvar, testContext);
    }

    /**
     * Funktion opretter et retursvar, som siden sendes afsted og køres gennem
     * systemet via diverse batchjobs.
     * 
     * Entry: Foregår på en ny side, så den kan startes fra alle steder i
     * løsningen Exit: Der skal logges ind i PSRM forfra
     * 
     * @param retursvarType
     *            The Type of the retursvar that needs to be generated
     * @param beloebDkk
     *            The amount of the payment
     * @param customerID
     *            represents either a CPR (10 digits) or CVR (8 digits)
     * @param justeringsID
     *            The Adjustment ID is generated by PSRM for a specific payout -
     *            The id is generated after approving the payout in PSRM. It can
     *            be found in Justeringer/Adjustments in the context menu in
     *            PSRm.
     * @param messageID
     *            The message ID is generated by PSRM for all payouts (since
     *            last payout) when the batchjob DKDBOVP (for CPR) /DKCLOVP (for
     *            CVR) has been initiated.
     * @param uniqueID
     *            Provide an unqiue ID for the retursvar file that is being
     *            generated instead of it being randomly generated.
     * 
     */
    public static void opretRetursvar(RetursvarType retursvarType, double beloebDkk, String customerID,
            String justeringsID,
            String messageID, String uniqueID, TestContext testContext)
            throws IOException {

        Retursvar retursvar = new Retursvar(retursvarType, beloebDkk, customerID, justeringsID, messageID, uniqueID);
        standardOpretProcedure(retursvarType, retursvar, testContext);

    }

    private static void standardOpretProcedure(RetursvarType retursvarType, Retursvar retursvar,
            TestContext testContext) throws IOException {
        RetursvarsManager manager = new RetursvarsManager(testContext.getPropertyProvider());
        File file = manager.opretRetursvarFil(retursvar);

        // Submit retursvar file
        manager.indsendRetursvarsFil(file, retursvarType);

        // Run Batchjob
        BatchJobRunner batch = new BatchJobRunner(testContext.getPropertyProvider());
        batch.runRetursvarBatchJob();
    }
}
